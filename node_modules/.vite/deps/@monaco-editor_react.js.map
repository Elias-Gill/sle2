{
  "version": 3,
  "sources": ["../../@monaco-editor/react/src/index.ts", "../../@monaco-editor/react/src/DiffEditor/index.ts", "../../@monaco-editor/react/src/DiffEditor/DiffEditor.tsx", "../../@monaco-editor/react/src/MonacoContainer/index.ts", "../../@monaco-editor/react/src/MonacoContainer/MonacoContainer.tsx", "../../@monaco-editor/react/src/MonacoContainer/styles.ts", "../../@monaco-editor/react/src/Loading/Loading.tsx", "../../@monaco-editor/react/src/Loading/styles.ts", "../../@monaco-editor/react/src/Loading/index.ts", "../../@monaco-editor/react/src/hooks/useMount/index.ts", "../../@monaco-editor/react/src/hooks/useUpdate/index.ts", "../../@monaco-editor/react/src/utils/index.ts", "../../@monaco-editor/react/src/hooks/useMonaco/index.ts", "../../@monaco-editor/react/src/Editor/index.ts", "../../@monaco-editor/react/src/Editor/Editor.tsx", "../../@monaco-editor/react/src/hooks/usePrevious/index.ts"],
  "sourcesContent": ["import loader from '@monaco-editor/loader';\nexport { loader };\n\nimport DiffEditor from './DiffEditor';\nexport * from './DiffEditor/types';\nexport { DiffEditor };\n\nimport useMonaco from './hooks/useMonaco';\nexport { useMonaco };\n\nimport Editor from './Editor';\nexport * from './Editor/types';\nexport { Editor };\nexport default Editor;\n\n// Monaco\nimport type * as monaco from 'monaco-editor/esm/vs/editor/editor.api';\nexport type Monaco = typeof monaco;\n\n// Default themes\nexport type Theme = 'vs-dark' | 'light';\n", "import { memo } from 'react';\n\nimport DiffEditor from './DiffEditor';\n\nexport * from './types';\n\nexport default memo(DiffEditor);\n", "'use client';\n\nimport React, { useState, useRef, useCallback, useEffect } from 'react';\nimport loader from '@monaco-editor/loader';\n\nimport MonacoContainer from '../MonacoContainer';\nimport useMount from '../hooks/useMount';\nimport useUpdate from '../hooks/useUpdate';\nimport { noop, getOrCreateModel } from '../utils';\nimport { type DiffEditorProps, type MonacoDiffEditor } from './types';\nimport { type Monaco } from '..';\n\nfunction DiffEditor({\n  original,\n  modified,\n  language,\n  originalLanguage,\n  modifiedLanguage,\n  originalModelPath,\n  modifiedModelPath,\n  keepCurrentOriginalModel = false,\n  keepCurrentModifiedModel = false,\n  theme = 'light',\n  loading = 'Loading...',\n  options = {},\n  height = '100%',\n  width = '100%',\n  className,\n  wrapperProps = {},\n  beforeMount = noop,\n  onMount = noop,\n}: DiffEditorProps) {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isMonacoMounting, setIsMonacoMounting] = useState(true);\n  const editorRef = useRef<MonacoDiffEditor | null>(null);\n  const monacoRef = useRef<Monaco | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onMountRef = useRef(onMount);\n  const beforeMountRef = useRef(beforeMount);\n  const preventCreation = useRef(false);\n\n  useMount(() => {\n    const cancelable = loader.init();\n\n    cancelable\n      .then((monaco) => (monacoRef.current = monaco) && setIsMonacoMounting(false))\n      .catch(\n        (error) =>\n          error?.type !== 'cancelation' && console.error('Monaco initialization: error:', error),\n      );\n\n    return () => (editorRef.current ? disposeEditor() : cancelable.cancel());\n  });\n\n  useUpdate(\n    () => {\n      if (editorRef.current && monacoRef.current) {\n        const originalEditor = editorRef.current.getOriginalEditor();\n        const model = getOrCreateModel(\n          monacoRef.current,\n          original || '',\n          originalLanguage || language || 'text',\n          originalModelPath || '',\n        );\n\n        if (model !== originalEditor.getModel()) {\n          originalEditor.setModel(model);\n        }\n      }\n    },\n    [originalModelPath],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      if (editorRef.current && monacoRef.current) {\n        const modifiedEditor = editorRef.current.getModifiedEditor();\n        const model = getOrCreateModel(\n          monacoRef.current,\n          modified || '',\n          modifiedLanguage || language || 'text',\n          modifiedModelPath || '',\n        );\n\n        if (model !== modifiedEditor.getModel()) {\n          modifiedEditor.setModel(model);\n        }\n      }\n    },\n    [modifiedModelPath],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      const modifiedEditor = editorRef.current!.getModifiedEditor();\n      if (modifiedEditor.getOption(monacoRef.current!.editor.EditorOption.readOnly)) {\n        modifiedEditor.setValue(modified || '');\n      } else {\n        if (modified !== modifiedEditor.getValue()) {\n          modifiedEditor.executeEdits('', [\n            {\n              range: modifiedEditor.getModel()!.getFullModelRange(),\n              text: modified || '',\n              forceMoveMarkers: true,\n            },\n          ]);\n\n          modifiedEditor.pushUndoStop();\n        }\n      }\n    },\n    [modified],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      editorRef.current?.getModel()?.original.setValue(original || '');\n    },\n    [original],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      const { original, modified } = editorRef.current!.getModel()!;\n\n      monacoRef.current!.editor.setModelLanguage(original, originalLanguage || language || 'text');\n      monacoRef.current!.editor.setModelLanguage(modified, modifiedLanguage || language || 'text');\n    },\n    [language, originalLanguage, modifiedLanguage],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      monacoRef.current?.editor.setTheme(theme);\n    },\n    [theme],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      editorRef.current?.updateOptions(options);\n    },\n    [options],\n    isEditorReady,\n  );\n\n  const setModels = useCallback(() => {\n    if (!monacoRef.current) return;\n    beforeMountRef.current(monacoRef.current);\n    const originalModel = getOrCreateModel(\n      monacoRef.current,\n      original || '',\n      originalLanguage || language || 'text',\n      originalModelPath || '',\n    );\n\n    const modifiedModel = getOrCreateModel(\n      monacoRef.current,\n      modified || '',\n      modifiedLanguage || language || 'text',\n      modifiedModelPath || '',\n    );\n\n    editorRef.current?.setModel({\n      original: originalModel,\n      modified: modifiedModel,\n    });\n  }, [\n    language,\n    modified,\n    modifiedLanguage,\n    original,\n    originalLanguage,\n    originalModelPath,\n    modifiedModelPath,\n  ]);\n\n  const createEditor = useCallback(() => {\n    if (!preventCreation.current && containerRef.current) {\n      editorRef.current = monacoRef.current!.editor.createDiffEditor(containerRef.current, {\n        automaticLayout: true,\n        ...options,\n      });\n\n      setModels();\n\n      monacoRef.current?.editor.setTheme(theme);\n\n      setIsEditorReady(true);\n      preventCreation.current = true;\n    }\n  }, [options, theme, setModels]);\n\n  useEffect(() => {\n    if (isEditorReady) {\n      onMountRef.current(editorRef.current!, monacoRef.current!);\n    }\n  }, [isEditorReady]);\n\n  useEffect(() => {\n    !isMonacoMounting && !isEditorReady && createEditor();\n  }, [isMonacoMounting, isEditorReady, createEditor]);\n\n  function disposeEditor() {\n    const models = editorRef.current?.getModel();\n\n    if (!keepCurrentOriginalModel) {\n      models?.original?.dispose();\n    }\n\n    if (!keepCurrentModifiedModel) {\n      models?.modified?.dispose();\n    }\n\n    editorRef.current?.dispose();\n  }\n\n  return (\n    <MonacoContainer\n      width={width}\n      height={height}\n      isEditorReady={isEditorReady}\n      loading={loading}\n      _ref={containerRef}\n      className={className}\n      wrapperProps={wrapperProps}\n    />\n  );\n}\n\nexport default DiffEditor;\n", "import { memo } from 'react';\n\nimport MonacoContainer from './MonacoContainer';\n\nexport default memo(MonacoContainer);\n", "import React from 'react';\n\nimport styles from './styles';\nimport Loading from '../Loading';\nimport { type ContainerProps } from './types';\n\n// ** forwardref render functions do not support proptypes or defaultprops **\n// one of the reasons why we use a separate prop for passing ref instead of using forwardref\n\nfunction MonacoContainer({\n  width,\n  height,\n  isEditorReady,\n  loading,\n  _ref,\n  className,\n  wrapperProps,\n}: ContainerProps) {\n  return (\n    <section style={{ ...styles.wrapper, width, height }} {...wrapperProps}>\n      {!isEditorReady && <Loading>{loading}</Loading>}\n      <div\n        ref={_ref}\n        style={{ ...styles.fullWidth, ...(!isEditorReady && styles.hide) }}\n        className={className}\n      />\n    </section>\n  );\n}\n\nexport default MonacoContainer;\n", "import { type CSSProperties } from 'react';\n\nconst styles: Record<string, CSSProperties> = {\n  wrapper: {\n    display: 'flex',\n    position: 'relative',\n    textAlign: 'initial',\n  },\n  fullWidth: {\n    width: '100%',\n  },\n  hide: {\n    display: 'none',\n  },\n};\n\nexport default styles;\n", "import React, { type PropsWithChildren } from 'react';\n\nimport styles from './styles';\n\nfunction Loading({ children }: PropsWithChildren) {\n  return <div style={styles.container}>{children}</div>;\n}\n\nexport default Loading;\n", "import { type CSSProperties } from 'react';\n\nconst styles: Record<string, CSSProperties> = {\n  container: {\n    display: 'flex',\n    height: '100%',\n    width: '100%',\n    justifyContent: 'center',\n    alignItems: 'center',\n  },\n};\n\nexport default styles;\n", "import Loading from './Loading';\n\nexport default Loading;\n", "import { useEffect, type EffectCallback } from 'react';\n\nfunction useMount(effect: EffectCallback) {\n  useEffect(effect, []);\n}\n\nexport default useMount;\n", "import { useEffect, useRef, type DependencyList, type EffectCallback } from 'react';\n\nfunction useUpdate(effect: EffectCallback, deps: DependencyList, applyChanges = true) {\n  const isInitialMount = useRef(true);\n\n  useEffect(\n    isInitialMount.current || !applyChanges\n      ? () => {\n          isInitialMount.current = false;\n        }\n      : effect,\n    deps,\n  );\n}\n\nexport default useUpdate;\n", "import { type Monaco } from '..';\n\n/**\n * noop is a helper function that does nothing\n * @returns undefined\n */\nfunction noop() {\n  /** no-op */\n}\n\n/**\n * getOrCreateModel is a helper function that will return a model if it exists\n * or create a new model if it does not exist.\n * This is useful for when you want to create a model for a file that may or may not exist yet.\n * @param monaco The monaco instance\n * @param value The value of the model\n * @param language The language of the model\n * @param path The path of the model\n * @returns The model that was found or created\n */\nfunction getOrCreateModel(monaco: Monaco, value: string, language: string, path: string) {\n  return getModel(monaco, path) || createModel(monaco, value, language, path);\n}\n\n/**\n * getModel is a helper function that will return a model if it exists\n * or return undefined if it does not exist.\n * @param monaco The monaco instance\n * @param path The path of the model\n * @returns The model that was found or undefined\n */\nfunction getModel(monaco: Monaco, path: string) {\n  return monaco.editor.getModel(createModelUri(monaco, path));\n}\n\n/**\n * createModel is a helper function that will create a new model\n * @param monaco The monaco instance\n * @param value The value of the model\n * @param language The language of the model\n * @param path The path of the model\n * @returns The model that was created\n */\nfunction createModel(monaco: Monaco, value: string, language?: string, path?: string) {\n  return monaco.editor.createModel(\n    value,\n    language,\n    path ? createModelUri(monaco, path) : undefined,\n  );\n}\n\n/**\n * createModelUri is a helper function that will create a new model uri\n * @param monaco The monaco instance\n * @param path The path of the model\n * @returns The model uri that was created\n */\nfunction createModelUri(monaco: Monaco, path: string) {\n  return monaco.Uri.parse(path);\n}\n\nexport { noop, getOrCreateModel };\n", "import { useState } from 'react';\nimport loader from '@monaco-editor/loader';\n\nimport useMount from '../useMount';\n\nfunction useMonaco() {\n  const [monaco, setMonaco] = useState(loader.__getMonacoInstance());\n\n  useMount(() => {\n    let cancelable: ReturnType<typeof loader.init>;\n\n    if (!monaco) {\n      cancelable = loader.init();\n\n      cancelable.then((monaco) => {\n        setMonaco(monaco);\n      });\n    }\n\n    return () => cancelable?.cancel();\n  });\n\n  return monaco;\n}\n\nexport default useMonaco;\n", "import { memo } from 'react';\n\nimport Editor from './Editor';\n\nexport * from './types';\n\nexport default memo(Editor);\n", "'use client';\n\nimport React, { useState, useEffect, useRef, useCallback } from 'react';\nimport loader from '@monaco-editor/loader';\nimport useMount from '../hooks/useMount';\nimport useUpdate from '../hooks/useUpdate';\nimport usePrevious from '../hooks/usePrevious';\nimport { type IDisposable, type editor } from 'monaco-editor';\nimport { noop, getOrCreateModel } from '../utils';\nimport { type EditorProps } from './types';\nimport { type Monaco } from '..';\nimport MonacoContainer from '../MonacoContainer';\n\nconst viewStates = new Map();\n\nfunction Editor({\n  defaultValue,\n  defaultLanguage,\n  defaultPath,\n  value,\n  language,\n  path,\n  /* === */\n  theme = 'light',\n  line,\n  loading = 'Loading...',\n  options = {},\n  overrideServices = {},\n  saveViewState = true,\n  keepCurrentModel = false,\n  /* === */\n  width = '100%',\n  height = '100%',\n  className,\n  wrapperProps = {},\n  /* === */\n  beforeMount = noop,\n  onMount = noop,\n  onChange,\n  onValidate = noop,\n}: EditorProps) {\n  const [isEditorReady, setIsEditorReady] = useState(false);\n  const [isMonacoMounting, setIsMonacoMounting] = useState(true);\n  const monacoRef = useRef<Monaco | null>(null);\n  const editorRef = useRef<editor.IStandaloneCodeEditor | null>(null);\n  const containerRef = useRef<HTMLDivElement>(null);\n  const onMountRef = useRef(onMount);\n  const beforeMountRef = useRef(beforeMount);\n  const subscriptionRef = useRef<IDisposable>();\n  const valueRef = useRef(value);\n  const previousPath = usePrevious(path);\n  const preventCreation = useRef(false);\n  const preventTriggerChangeEvent = useRef<boolean>(false);\n\n  useMount(() => {\n    const cancelable = loader.init();\n\n    cancelable\n      .then((monaco) => (monacoRef.current = monaco) && setIsMonacoMounting(false))\n      .catch(\n        (error) =>\n          error?.type !== 'cancelation' && console.error('Monaco initialization: error:', error),\n      );\n\n    return () => (editorRef.current ? disposeEditor() : cancelable.cancel());\n  });\n\n  useUpdate(\n    () => {\n      const model = getOrCreateModel(\n        monacoRef.current!,\n        defaultValue || value || '',\n        defaultLanguage || language || '',\n        path || defaultPath || '',\n      );\n\n      if (model !== editorRef.current?.getModel()) {\n        if (saveViewState) viewStates.set(previousPath, editorRef.current?.saveViewState());\n        editorRef.current?.setModel(model);\n        if (saveViewState) editorRef.current?.restoreViewState(viewStates.get(path));\n      }\n    },\n    [path],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      editorRef.current?.updateOptions(options);\n    },\n    [options],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      if (!editorRef.current || value === undefined) return;\n      if (editorRef.current.getOption(monacoRef.current!.editor.EditorOption.readOnly)) {\n        editorRef.current.setValue(value);\n      } else if (value !== editorRef.current.getValue()) {\n        preventTriggerChangeEvent.current = true;\n        editorRef.current.executeEdits('', [\n          {\n            range: editorRef.current.getModel()!.getFullModelRange(),\n            text: value,\n            forceMoveMarkers: true,\n          },\n        ]);\n\n        editorRef.current.pushUndoStop();\n        preventTriggerChangeEvent.current = false;\n      }\n    },\n    [value],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      const model = editorRef.current?.getModel();\n      if (model && language) monacoRef.current?.editor.setModelLanguage(model, language);\n    },\n    [language],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      // reason for undefined check: https://github.com/suren-atoyan/monaco-react/pull/188\n      if (line !== undefined) {\n        editorRef.current?.revealLine(line);\n      }\n    },\n    [line],\n    isEditorReady,\n  );\n\n  useUpdate(\n    () => {\n      monacoRef.current?.editor.setTheme(theme);\n    },\n    [theme],\n    isEditorReady,\n  );\n\n  const createEditor = useCallback(() => {\n    if (!containerRef.current || !monacoRef.current) return;\n    if (!preventCreation.current) {\n      beforeMountRef.current(monacoRef.current);\n      const autoCreatedModelPath = path || defaultPath;\n\n      const defaultModel = getOrCreateModel(\n        monacoRef.current,\n        value || defaultValue || '',\n        defaultLanguage || language || '',\n        autoCreatedModelPath || '',\n      );\n\n      editorRef.current = monacoRef.current?.editor.create(\n        containerRef.current,\n        {\n          model: defaultModel,\n          automaticLayout: true,\n          ...options,\n        },\n        overrideServices,\n      );\n\n      saveViewState && editorRef.current.restoreViewState(viewStates.get(autoCreatedModelPath));\n\n      monacoRef.current.editor.setTheme(theme);\n\n      if (line !== undefined) {\n        editorRef.current.revealLine(line);\n      }\n\n      setIsEditorReady(true);\n      preventCreation.current = true;\n    }\n  }, [\n    defaultValue,\n    defaultLanguage,\n    defaultPath,\n    value,\n    language,\n    path,\n    options,\n    overrideServices,\n    saveViewState,\n    theme,\n    line,\n  ]);\n\n  useEffect(() => {\n    if (isEditorReady) {\n      onMountRef.current(editorRef.current!, monacoRef.current!);\n    }\n  }, [isEditorReady]);\n\n  useEffect(() => {\n    !isMonacoMounting && !isEditorReady && createEditor();\n  }, [isMonacoMounting, isEditorReady, createEditor]);\n\n  // subscription\n  // to avoid unnecessary updates (attach - dispose listener) in subscription\n  valueRef.current = value;\n\n  // onChange\n  useEffect(() => {\n    if (isEditorReady && onChange) {\n      subscriptionRef.current?.dispose();\n      subscriptionRef.current = editorRef.current?.onDidChangeModelContent((event) => {\n        if (!preventTriggerChangeEvent.current) {\n          onChange(editorRef.current!.getValue(), event);\n        }\n      });\n    }\n  }, [isEditorReady, onChange]);\n\n  // onValidate\n  useEffect(() => {\n    if (isEditorReady) {\n      const changeMarkersListener = monacoRef.current!.editor.onDidChangeMarkers((uris) => {\n        const editorUri = editorRef.current!.getModel()?.uri;\n\n        if (editorUri) {\n          const currentEditorHasMarkerChanges = uris.find((uri) => uri.path === editorUri.path);\n          if (currentEditorHasMarkerChanges) {\n            const markers = monacoRef.current!.editor.getModelMarkers({\n              resource: editorUri,\n            });\n            onValidate?.(markers);\n          }\n        }\n      });\n\n      return () => {\n        changeMarkersListener?.dispose();\n      };\n    }\n    return () => {\n      // eslint happy\n    };\n  }, [isEditorReady, onValidate]);\n\n  function disposeEditor() {\n    subscriptionRef.current?.dispose();\n\n    if (keepCurrentModel) {\n      saveViewState && viewStates.set(path, editorRef.current!.saveViewState());\n    } else {\n      editorRef.current!.getModel()?.dispose();\n    }\n\n    editorRef.current!.dispose();\n  }\n\n  return (\n    <MonacoContainer\n      width={width}\n      height={height}\n      isEditorReady={isEditorReady}\n      loading={loading}\n      _ref={containerRef}\n      className={className}\n      wrapperProps={wrapperProps}\n    />\n  );\n}\n\nexport default Editor;\n", "import { useEffect, useRef } from 'react';\n\nfunction usePrevious<T>(value: T) {\n  const ref = useRef<T>();\n\n  useEffect(() => {\n    ref.current = value;\n  }, [value]);\n\n  return ref.current;\n}\n\nexport default usePrevious;\n"],
  "mappings": "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",
  "names": ["import_react", "import_react", "import_react", "import_react", "styles", "styles_default", "Loading", "children", "React", "Loading_default", "MonacoContainer", "width", "height", "isEditorReady", "loading", "_ref", "className", "wrapperProps", "MonacoContainer_default", "memo", "useMount", "effect", "useEffect", "useMount_default", "useUpdate", "deps", "applyChanges", "isInitialMount", "useRef", "useUpdate_default", "noop", "getOrCreateModel", "monaco", "value", "language", "path", "getModel", "createModel", "createModelUri", "DiffEditor", "original", "modified", "originalLanguage", "modifiedLanguage", "originalModelPath", "modifiedModelPath", "keepCurrentOriginalModel", "keepCurrentModifiedModel", "theme", "options", "beforeMount", "onMount", "setIsEditorReady", "useState", "isMonacoMounting", "setIsMonacoMounting", "editorRef", "monacoRef", "containerRef", "onMountRef", "beforeMountRef", "preventCreation", "cancelable", "loader", "error", "disposeEditor", "originalEditor", "model", "modifiedEditor", "setModels", "useCallback", "originalModel", "modifiedModel", "createEditor", "models", "DiffEditor_default", "useMonaco", "setMonaco", "useMonaco_default", "usePrevious", "ref", "usePrevious_default", "viewStates", "Editor", "defaultValue", "defaultLanguage", "defaultPath", "line", "overrideServices", "saveViewState", "keepCurrentModel", "onChange", "onValidate", "subscriptionRef", "valueRef", "previousPath", "preventTriggerChangeEvent", "autoCreatedModelPath", "defaultModel", "event", "changeMarkersListener", "uris", "editorUri", "uri", "markers", "Editor_default", "src_default"]
}
